@using Composite.Community.Blog
@using Composite.Core.WebClient.Renderings.Page
@inherits RazorFunction
@functions {
    public override string FunctionDescription
    {
        get { return @"Displays a list of the latest blog entries, blog comments and the form to post comments on a page."; }
    }

    [FunctionParameter(Label = "Blog Entries Count", Help = @"The number of blog entries to display (5 by default).", DefaultValue = 5)]
    public int BlogEntriesCount { get; set; }

    [FunctionParameter(Label = "List options", Help = "Additional data to show when displaying blog posts in a list, such as the image, teaser, content, author, date, tags, share icons, RSS link. By default  all data is displayed  except for the image, content, RSS link.", DefaultValue = "Show date,Show author,Show teaser,Show image,Show tags,Show share icons", WidgetMarkup = @"<f:widgetfunction xmlns:f=""http://www.composite.net/ns/function/1.0"" name=""Composite.Widgets.String.Selector""><f:param xmlns:f=""http://www.composite.net/ns/function/1.0"" name=""Options""><f:function xmlns:f=""http://www.composite.net/ns/function/1.0"" name=""Composite.Utils.String.Split""><f:param name=""String"" value=""Show Comments Count,Show image,Show teaser,Show content,Show author,Show date,Show tags,Show share icons,Show RSS"" /></f:function></f:param><f:param name=""Multiple"" value=""True"" /></f:widgetfunction>")]
    public string BlogListOptions { get; set; }

    [FunctionParameter(Label = "Item options", Help = @"Additional data to show when displaying an individual  blog post, such as the image, teaser, content, author, date, tags, share icons. By default  the author, date and content are only  displayed.", DefaultValue = "Show content,Show tags,Show date,Show author,Display title", WidgetMarkup = @"<f:widgetfunction xmlns:f=""http://www.composite.net/ns/function/1.0"" name=""Composite.Widgets.String.Selector"" label="""" bindingsourcename=""""><f:helpdefinition xmlns:f=""http://www.composite.net/ns/function/1.0"" helptext="""" /><f:param xmlns:f=""http://www.composite.net/ns/function/1.0"" name=""Options""><f:function xmlns:f=""http://www.composite.net/ns/function/1.0"" name=""Composite.Utils.String.Split""><f:param name=""String"" value=""Display title,Show image,Show teaser,Show content,Show author,Show date,Show tags,Show share icons"" /></f:function></f:param><f:param name=""Multiple"" value=""True"" /></f:widgetfunction>")]
    public string BlogItemOptions { get; set; }

    [FunctionParameter(Label = "Comments Service Key", Help = "The unique value identifying your website with a comment service you have registered with. By default this is SiteShortName for DISQUS, register at http://disqus.com/.", DefaultValue = "")]
    public string CommentsServiceKey { get; set; }

    [FunctionParameter(Label = "Show posts from all blogs", Help = "If 'true', posts from all blogs available on this website will be shown; otherwise, only from the current blog. 'false' by default", DefaultValue = false)]
    public bool IsGlobal { get; set; }
}
@{
    int pageSize = BlogEntriesCount;
    var pageCurrent = 1;
    pageCurrent = int.TryParse(Request.QueryString["p"], out pageCurrent) ? pageCurrent : 1;

    var entries = BlogFacade.GetEntries(IsGlobal);
    var pageCount = (entries.Count() + pageSize - 1) / pageSize;
    entries = entries.Skip(pageSize * (pageCurrent - 1)).Take(pageSize);
    int entriesCount = entries.Count();
    var isBlogItem = BlogFacade.IsBlogList();
    var pageId = PageRenderer.CurrentPageId;
    var authors = BlogFacade.GetAuthours();
}
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
    @if (isBlogItem)
    {
        var entry = entries.First();
        <title>
            @entry.Title
        </title>
        <meta name="description" content ="@entry.Teaser"/>
    }
    <link rel="alternate" type="application/rss+xml" title="@CurrentPageNode.Title" href="/BlogRssFeed.ashx?bid=@CurrentPageNode.Id" />
    <link id="BlogStyles" rel="stylesheet" type="text/css" href="~/Frontend/Composite/Community/Blog/Styles.css" />
    <link href="//netdna.bootstrapcdn.com/font-awesome/3.0.2/css/font-awesome.css" rel="stylesheet" />
</head>
<body>
    <div class="Blog">
        @if (isBlogItem)
        {
            var entry = entries.First();
            var author = authors.First(a => a.Id == entry.Author);
            @BlogItem(entry, author, BlogItemOptions, CommentsServiceKey);
        }
        else
        {
            int i = 0;
            foreach (var entry in entries)
            {
                var author = authors.First(a => a.Id == entry.Author);
            @BlogItem(entry, author, BlogListOptions, CommentsServiceKey)
                if (entriesCount != i)
                {
                <hr />
                }
                i++;
            }
            if (pageCount > 1)
            {
            <div class="pagination">
                <ul>
                    @Paging(pageCount, pageCurrent)
                </ul>
            </div>
            }
            if (BlogListOptions.Contains("Show RSS"))
            {
            <div class="BlogRSS">
                <a title="Blog Feed" href="~/BlogRssFeed.ashx?bid=@pageId&amp;IsGlobal=@IsGlobal.ToString()&amp;cultureName=@BlogFacade.GetCurrentCultureName()">Blog RSS</a>
            </div>
            }
            if (BlogListOptions.Contains("Show Comments Count"))
            {
            <script type="text/javascript">
                /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
                var disqus_shortname = '@CommentsServiceKey'; // required: replace example with your forum shortname

                /* * * DON'T EDIT BELOW THIS LINE * * */
                (function () {
                    var s = document.createElement('script'); s.async = true;
                    s.type = 'text/javascript';
                    s.src = 'http://' + disqus_shortname + '.disqus.com/count.js';
                    (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
                }());
            </script>
            }
            BlogFacade.SetNoCache();
        }
    </div>
</body>
</html>

@helper BlogItem(Entries entry, Authors author, string blogItemOptions, string commentsServiceKey)
{
    var tags = BlogFacade.GetBlogTags(entry.Tags);
    var displayComments = entry.DisplayComments;
    var isBlogItem = BlogFacade.IsBlogList();
    var fullBlogUrl = BlogFacade.GetFullBlogUrl(entry.Date, entry.Title);
    var blogUrl = BlogFacade.GetBlogUrl(entry.Date, entry.Title, entry.PageId);

    <div class="BlogItem">
        <div class="BlogTitle">
            @if (isBlogItem)
            {
                if (blogItemOptions.Contains("Display title"))
                {
                <h1>@entry.Title</h1>
                }
            }
            else
            {
                <h2>
                    <a href="@blogUrl" title="@entry.Title">
                        @entry.Title
                    </a>
                    @if (displayComments && blogItemOptions.Contains("Show Comments Count"))
                    {
                        <span class="t-count">
                            <a href="@(fullBlogUrl)#disqus_thread"></a>
                        </span>
                    }
                </h2>
            }
        </div>
        @if (!string.IsNullOrEmpty(entry.Image) && blogItemOptions.Contains("Show image"))
        {
            <img class="BlogImage img-polaroid" border="0" src="~/media(@entry.Image)" alt="" />
        }

        <div class="row">
            <div class="span7">
                @if (tags.Any() && blogItemOptions.Contains("Show tags"))
                {
                    @TagsList(tags)
                }
            </div>
            @if (blogItemOptions.Contains("Show author"))
            {
                @Author(author)

            }
            @if (blogItemOptions.Contains("Show date"))
            {
                @Date(entry.Date)
            }
        </div>
        @if (blogItemOptions.Contains("Show teaser"))
        {
            <div class="BlogTeaser clearfix">
                @entry.Teaser
            </div>
        }
        @if (blogItemOptions.Contains("Show content"))
        {
            <div class="BlogContent clearfix">
                @Html.Raw(entry.Content)
            </div>
        }

        @if (blogItemOptions.Contains("Show share icons"))
        {
            @AddThis(fullBlogUrl, entry.Title)
        }

        @if (isBlogItem)
        {
            if (entry.DisplayComments)
            {
            @Function("Composite.Community.Blog.Comments", new { CommentsServiceKey = commentsServiceKey })
            }
        }
    </div>
}

@helper Paging(int pageCount, int pageCurrent)
{
    var groupsize = 10;
    if (pageCurrent > groupsize)
    {
    <li><a href="@BlogFacade.GetCurrentPageUrl()?p=1">&lt;&lt;</a></li>
    }
    if (pageCurrent > 1)
    {
    <li><a href="@BlogFacade.GetCurrentPageUrl()?p=@(pageCurrent - 1)">&lt;</a></li>
    }
    var grouppage = (pageCurrent - 1) / groupsize;
    for (int page = grouppage * groupsize + 1; page <= pageCount + 1 && page <= (grouppage + 1) * groupsize; page++)
    {
        if (page < pageCount + 1)
        {
            if (page == pageCurrent)
            {
    <li><span>
        @page
    </span></li>
            }
            else
            {
    <li><a href="@BlogFacade.GetCurrentPageUrl()?p=@page">@page</a></li>
            }
        }
    }
    if (pageCurrent + 1 <= pageCount)
    {
    <li><a href="@BlogFacade.GetCurrentPageUrl()?p=@(pageCurrent + 1)">&gt;</a></li>
    }
    if (grouppage < (pageCount - 1) / groupsize)
    {
    <li><a href="@BlogFacade.GetCurrentPageUrl()?p=@pageCount">&gt;&gt;</a></li>
    }
}

@helper Author(Authors author)
{
    if (!string.IsNullOrEmpty(author.Picture))
    {
    <img class="BlogAuthorPicture" border="0" src="~/Renderers/ShowMedia.ashx?i=@author.Picture" alt="@author.Name" />
    }
    <span class="muted span">
        <i class="icon-user"></i>
        @if (!string.IsNullOrEmpty(author.Email) && author.DisplayEmail)
        {
            <a href="mailto:@author.Email">@author.Name</a>
        }
        else
        {
            @author.Name
        }
    </span>
}

@helper AddThis(string fullBlogUrl, string title)
{
    <div class="AddThis">
        <!-- AddThis Button BEGIN -->
        <div class="addthis_toolbox addthis_default_style" addthis:url="@fullBlogUrl" addthis:title="{@title}" xmlns:addthis="http://www.addthis.com">
            <a class="addthis_button_facebook_like"></a>
            <a class="addthis_button_tweet"></a>
            <a class="addthis_counter addthis_pill_style addthis_nonzero"></a>
        </div>
        <script type="text/javascript" src="http://s7.addthis.com/js/250/addthis_widget.js#pubid=xa-4f86b27a69737a92"></script>
        <!-- AddThis Button END -->
    </div>
}

@helper Date(DateTime date)
{
    <span class="muted span">
        <i class="icon-calendar"></i>
        @BlogFacade.CustomDateFormat(date, "dd MMMM yyyy")
    </span>
}

@helper TagsList(List<string> tags)
{
    <span class="muted">
        <i class="icon-tags"></i>
        @foreach (var tag in tags)
        {
            <a href="@BlogFacade.GetCurrentPageUrl()/@BlogFacade.Encode(tag)" title="@tag">
                @tag
            </a>
        }
    </span>
}